{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til-javascript-basic/","result":{"data":{"markdownRemark":{"id":"49f26ec1-837d-52e7-96b3-041d15cdaf5a","html":"<h2 id=\"1-javascript의-함수\"><a href=\"#1-javascript%EC%9D%98-%ED%95%A8%EC%88%98\" aria-label=\"1 javascript의 함수 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Javascript의 함수</h2>\n<h3 id=\"1-함수정의\"><a href=\"#1-%ED%95%A8%EC%88%98%EC%A0%95%EC%9D%98\" aria-label=\"1 함수정의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 함수정의</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"2-함수호출\"><a href=\"#2-%ED%95%A8%EC%88%98%ED%98%B8%EC%B6%9C\" aria-label=\"2 함수호출 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수호출</h3>\n<p>함수가 정의되면 바로 실행되는 것이 아니다. 함수를 무조건 호출해야 함</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-참고사항\"><a href=\"#3-%EC%B0%B8%EA%B3%A0%EC%82%AC%ED%95%AD\" aria-label=\"3 참고사항 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고사항</h3>\n<ul>\n<li>parameter는 매개변수로 데이터를 기다리는 값이다!\n값을 가지고 있지않은 그냥 빈 데이터 상자라고 생각하면 된다.\n함수의 정의에서 전달받은 인수를 함수 내부로 전달하기 위해 사용하는 변수이며,매개변수는 함수 내에서만 사용됨\nparameter에 들어가는 value값을 우리는 argument(인자)라고 부른다.\n호출할 때 괄호 값에 arugment가 들어가고, 함수로 값을 전달해준다.</li>\n<li>함수는 return을 하게 되면 함수가 종료된다. 함수는 이름으로 정의하게 되면, 윈도우 안에 메모리 키워드로 저장된다.함수가 상황에 맞게 값이 달라지게 하고 싶으면,parameter와 argument를 사용한다.\nparameter로 변수이름을 지정해서 빈 저장소를 만들어주고, 그에 해당하는 argument값을 넣어줘서 해당 argument값이 출력될 수 있도록 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\t<span class=\"token keyword\">function</span> <span class=\"token function\">alretSuccess</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t   <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">+</span> “님 로그인 성공<span class=\"token operator\">!</span>”<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">alretSuccess</span><span class=\"token punctuation\">(</span>“김개발”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>alert msg로 “김개발님 로그인성공!” 이라는 메세지가 뜬다.\n여기서 name이 parameter / 함수호출때 사용된 “김개발”은 argument !</li>\n<li>함수에는 return이라는 게 있는데, return ~ 설정하면 함수가 실행되면\nreturn하라는 값을 함수실행이 끝나면 리턴해준다.\n모든 함수가 return하는 것은 아님! 리턴하는 것도 있고 아닌 것도 있다.\n함수 안에서 또 함수를 호출할 수도 있다 !(콜백함수라고하는데,,나중에 더자세히 설명을^^!!)\n알고리즘에서 반환한다~가 나오면 return을 활용하는 것이라고 생각하면 됨</li>\n</ul>\n<h2 id=\"2-javascript의-배열\"><a href=\"#2-javascript%EC%9D%98-%EB%B0%B0%EC%97%B4\" aria-label=\"2 javascript의 배열 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Javascript의 배열</h2>\n<p>:변수가 몇천개 되어야하는 값이 있을 때, 변수를 그렇게 많은 수로 지정할 수는 없음\n여러개의 값을 넣을 수 있는 저장소같은 게 바로 배열!</p>\n<h3 id=\"1-배열-정의\"><a href=\"#1-%EB%B0%B0%EC%97%B4-%EC%A0%95%EC%9D%98\" aria-label=\"1 배열 정의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배열 정의</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> <span class=\"token function\">변수명</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function\">변수명</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 만들어주면 데이터값이 빈 배열이 생성된다.</p>\n<h3 id=\"2-배열의-데이터\"><a href=\"#2-%EB%B0%B0%EC%97%B4%EC%9D%98-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-label=\"2 배열의 데이터 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 배열의 데이터</h3>\n<p>배열은 데이터로 다양한 데이터들을 가져올 수 있다.\n숫자, string, 다른 배열까지 배열 안으로 들어 올 수 있고, 배열 안에 들은 데이터 요소들도 element라고 부른다.</p>\n<h3 id=\"3-배열의-특징\"><a href=\"#3-%EB%B0%B0%EC%97%B4%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"3 배열의 특징 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 배열의 특징</h3>\n<ul>\n<li>배열은 [ ] 배열 안에 들어있는 element들에게 index를 부여해준다!</li>\n<li>index는 순서라고 생각하면 되고, 0부터 시작한다!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>‘a’<span class=\"token punctuation\">,</span> ‘b’<span class=\"token punctuation\">,</span> ‘c’ <span class=\"token punctuation\">]</span>\narr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ‘a’\n<span class=\"token comment\">// arr라는 배열에는 ‘a’, ‘b’, ‘c’ 3개의 요소가 있으며, 순서는 0, 1, 2로 정해짐</span></code></pre></div>\n<ul>\n<li>배열의 요소를 가져올 때는 배열이름[index] 를 하면 data값이 옴</li>\n<li>배열은 index로 데이터 값을 가져올 수 있음 ! b는 1번째, c는 2번째 !</li>\n<li>배열은 요소가 몇개들어있는지도 알 수 있음</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">arr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 실제 순서는 0부터 시작하지만 개수를 셀 때는 length는 1부터 시작 !</span></code></pre></div>\n<h3 id=\"4-배열-조작방법\"><a href=\"#4-%EB%B0%B0%EC%97%B4-%EC%A1%B0%EC%9E%91%EB%B0%A9%EB%B2%95\" aria-label=\"4 배열 조작방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 배열 조작방법</h3>\n<p>(1) 배열에 요소추가하는 법\n: 배열은 아무데이터도 없이 빈값으로 정의할 수 있다. 데이터를 넣어주는\n방법이 다양하다!</p>\n<ul>\n<li>가장 기본적인 방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 배열정의 완료</span>\n<span class=\"token comment\">// 배열을 추가할 때는 배열변수이름[index] = “data value” 이런식으로 추가해주면 된다.</span>\ncities<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> “서울”\ncities<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> “제주도”\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 출력: cities = [“서울”, “제주도” ]</span>\n<span class=\"token comment\">// index 순서와 상관없이 순서대로 지정하지않아도 데이터값 넣을 수 있음</span></code></pre></div>\n<ul>\n<li>\n<p>array.push</p>\n<p>array.push를 사용하면 배열의 맨 끝자리에 데이터 값을 넣을 수 있음</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span>\ncities<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>“경주”<span class=\"token punctuation\">,</span> “전주”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 출력: cities = [“경주”, “전주”]</span></code></pre></div>\n<ul>\n<li>\n<p>array.unshift</p>\n<p>array.unshift를 사용하면 배열의 맨 앞자리에 데이터 값을 넣을 수 있음</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">let</span> cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>“경주”<span class=\"token punctuation\">,</span>”전주”<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  cities<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>“인천”<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cities<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">//출력: [“인천”, “경주”, “전주”]</span></code></pre></div>\n<p>(2) 배열에서 요소삭제하는 법</p>\n<ul>\n<li>\n<p>array.pop()</p>\n<p>pop method를 사용하면 맨 뒤에 있는 element 제거 가능</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> cities <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> “서울”<span class=\"token punctuation\">,</span> ”부산”<span class=\"token punctuation\">,</span> ”제주도”<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">;</span>\ncities<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>cities<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//출력: [“서울”,”부산” ]</span></code></pre></div>","fields":{"slug":"/posts/til-javascript-basic/","tagSlugs":["/tag/til/","/tag/javascript/"]},"frontmatter":{"date":"2019-08-06T20:30:37.121Z","description":"JavaScript 함수와 배열의 기초","tags":["TIL","JAVASCRIPT"],"title":"JavaScript 함수와 배열의 기초"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til-javascript-basic/"}}}