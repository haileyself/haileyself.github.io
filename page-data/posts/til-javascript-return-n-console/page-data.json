{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til-javascript-return-n-console/","result":{"data":{"markdownRemark":{"id":"4dbe833a-efe9-57b1-bf2e-f768800a3701","html":"<p>Javascript session을 통해서 배운 함수에서의 return 은 어디에 위치해야 하는지와 console.log를 찍을 때 참고해야 될 사항을\n정리해보았습니다.</p>\n<h2 id=\"1-js-함수에서-return의-위치\"><a href=\"#1-js-%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C-return%EC%9D%98-%EC%9C%84%EC%B9%98\" aria-label=\"1 js 함수에서 return의 위치 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. JS 함수에서 return의 위치</h2>\n<p><strong>함수 안에서 return을 넣는 경우에는 함수가 끝나는 곳에 넣어야한다</strong></p>\n<ul>\n<li>why? return 이라는 말을 만나면 함수는 값을 내뱉고 끝나게 됨!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\t<span class=\"token keyword\">function</span> <span class=\"token function\">addFirestAndLast</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">myArray</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>myArray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> myArray<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n \t   <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>조건<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token punctuation\">}</span>\n\t   <span class=\"token keyword\">else</span><span class=\"token punctuation\">(</span>조건<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token punctuation\">}</span>\n\t    <span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 해당 함수의 if 조건 안에 statement 실행 안됨 !</span>\n<span class=\"token comment\">// 왜? return하면 함수 끝 !</span></code></pre></div>\n<h2 id=\"2-consolelog\"><a href=\"#2-consolelog\" aria-label=\"2 consolelog permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. console.log</h2>\n<p><strong>코드를 짜고 나서 가장 중요한 것 ! console.log 찍는 습관 들이기</strong></p>\n<ul>\n<li>개발자도구를 열어서 console.log(알고자하는 값)을 찍어보기</li>\n<li>console.log () 란?\n자바스크립트에서 이전에 정의 된 변수들을 화면에 출력하거나 사용자에게\n보여줘야되는 어떤 메시지를 출력하기 위해서 사용하는 기능.</li>\n<li>console이라는 객체의 log 함수(method)라고 보면 된다.</li>\n<li>console.log() —> 괄호에는 어떤 것이든지 올 수 있다. (string / num / array / 객체 등)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 출력: 2 ;</span>\n<span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"coding\"</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 출력 값 : coding</span></code></pre></div>\n<p>내가 변수를 잘 설정했는지, 해당 함수가 제대로 실행되고 있는지, 변수값이 어떻게 변하고 있는지 이런것들을 확인해보기 위해서 console.log를 꼭 해보자 !\nconsole.log를 할 때 여러번 콘솔을 찍어보면 값이 헷갈리니깐 콘솔찍는 부분에 ’ ’ string으로 설명 표시를 하기</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이거는 처음 정한 변수\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>디버깅(오류를 없애는 것)을 할때 가장 중요한 요소가 console을 쳐서 어디서부터가 문제인지 아는 것 !</li>\n</ul>\n<h4 id=\"1-consolelog-찍어서-나오는-오류의-종류\"><a href=\"#1-consolelog-%EC%B0%8D%EC%96%B4%EC%84%9C-%EB%82%98%EC%98%A4%EB%8A%94-%EC%98%A4%EB%A5%98%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"1 consolelog 찍어서 나오는 오류의 종류 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. console.log 찍어서 나오는 오류의 종류</h4>\n<ul>\n<li>NaN</li>\n</ul>\n<p>Not a number - 자바스크립트에서는 숫자 + string도 더하기 값이 계산 됨 !\n그러나 ’*‘(곱셈) 은 안됨\n그럴 때 숫자가 아니라 계산 못했어라는 에러 메세지(NaN)가 나옴</p>\n<ul>\n<li>\n<p>sth(변수이름) is not defined</p>\n<p>변수가 선언 된 적이 없는데 쓰면 뜨는 오류</p>\n</li>\n<li>\n<p>undefined</p>\n<p>인자로 아무것도 안보냈을 때 뜨는 오류 / 콘솔은 인자가 필요한데 () 괄호값에 아무것도 안넣어주면 undefined라고 뜸 undefined는 하나의 데이터 타입이다. - undefined type은 어떤 변수에 어떤 값도 할당되지않았을 때 undefined 라는 datatype을 사용 !</p>\n</li>\n<li>sth(이름) is not a function\n함수가 아닌데 함수로 호출하면 뜨는 오류</li>\n</ul>\n<h4 id=\"2-consolelog-시에-주의할-점-\"><a href=\"#2-consolelog-%EC%8B%9C%EC%97%90-%EC%A3%BC%EC%9D%98%ED%95%A0-%EC%A0%90-\" aria-label=\"2 consolelog 시에 주의할 점  permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. console.log 시에 주의할 점 !</h4>\n<p>에러가 발생하기 직전의 위치에 console.log를 찍어보기\n에러가 나면 해당 코드가 실행되지않고 종료되기때문에 console을 쳐서 어디가 문제인지 알아야 한다</p>","fields":{"slug":"/posts/til-javascript-return-n-console/","tagSlugs":["/tag/til/","/tag/javascript/","/tag/함수/","/tag/return/","/tag/console-log/"]},"frontmatter":{"date":"2019-08-10T20:30:37.121Z","description":"JavaScript 함수에서 return , 그리고 console.log 관련 참고사항","tags":["TIL","JAVASCRIPT","함수","return","console.log"],"title":"JavaScript 함수의 return 그리고 console.log 관련 참고사항"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til-javascript-return-n-console/"}}}