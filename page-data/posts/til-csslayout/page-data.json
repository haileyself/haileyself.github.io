{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til-csslayout/","webpackCompilationHash":"e83fef56335fefcacf75","result":{"data":{"markdownRemark":{"id":"c7f41ff1-0082-5695-a838-8ba747a083f4","html":"<p>안녕하세요~\n현재 프론트엔드 개발자를 꿈꾸며\n개발공부를 하고 있습니다 </p>\n<p>제가 공부한 내용을 여기에 조금씩 정리해보려고 합니다!\n1일차 정리가 완료되어 이제 파트로 나눠서 정리하려고 합니다!</p>\n<p>CSS Layout</p>\n<h2 id=\"1-position-property\"><a href=\"#1-position-property\" aria-label=\"1 position property permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Position property</h2>\n<p><strong>position property는 element의 위치를 정하는데 사용함\n기본적인(statcic)을 제외하고 나머지 부분 정리</strong></p>\n<ol>\n<li>\n<p>relative\n그자체로는 특별한 의미가 없지만 원래 위치를 기준으로 배치됨.\n상대적으로 배치 된 요소의 top, right, bottom, left  속성을 설정하면 일반위치에서 멀어지도록 조정됨.\n보통위치에서 상대적으로 요소가 자리를 잡기때문에 top과 같은 프로퍼티가 필요하다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Ex.\n    div {\n    position : relative;\n    top: -20px; left: 40px;\n    }</code></pre></div>\n<p><em>top에 - 값을 주면 위쪽으로 20px만큼 이동</em>\t</p>\n</li>\n<li>top, right, left, bottom 과 같은 프로퍼티 값을 주지않으면 static과 별 차이가 없는 것이 relative다.</li>\n<li>\n<p>absolute\n부모요소의 position이 fixed, relative, absolute이면 부모 기준으로 절대적으로 위치가 배치된다.\n(부모요소가 static이면 해당 position 적용 X)\n일반적으로 absolute를 쓸 경우 절대적으로 움직이고 싶은 부모에게 position : relative 를 부여한다.\nabsolute position을 가지게되면, block element 가로크기는 content의 크기만큼이다! </p>\n<ul>\n<li>만약 position된 부모태그가 없으면, 해당 element 는 document body를 부모로 사용해서, 페이지가 스크롤링 될때마다 따라다닌다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;style&gt;\ndiv.relative {\n  position: relative;\n  width: 400px;\n  height: 200px;\n  border: 3px solid #73AD21;\n} \n\ndiv.absolute {\n  position: absolute;\n  top: 40px;\n  right: 0;\n  width: 200px;\n  height: 100px;\n  border: 3px solid #73AD21;\n}\n&lt;/style&gt;</code></pre></div>\n<p>div.absolute의 위치는 부모element로 부터 위에서 부터 \t\t40px 떨어져있고, 오른쪽에는 아주 딱 붙어있는 자리임!</p>\n<ul>\n<li>top:-20px 이렇게 마이너스 값을 주니깐 element가 부모 \telement 위쪽으로 이동했다 ! </li>\n</ul>\n</li>\n<li>\n<p>fixed\n고정된 위치에 계속 배치되어있는 element\nabsolute는 relative나 이런 속성을 가진 부모가 필요했으나, fixed 는 필요없음\n<em>스크롤을 내리든지, 안내리든지 간에 계속 화면에 고정된 부분에 뜨는 것  !</em>\ntop, right, bottom, left 값을 주어서 위치를 지정하고 거기에 고정시키는 것 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;참고&gt;\n이미지위치를 픽셀이 아닌 %로도 줄 수 있다.\n어떤 element 기준으로 위치시킬 때, left :  10px 이렇게가 아닌 %값을 주면 \n부모element 너비의 기준으로 이동하는 것.\n예를 들어, 부모element의 너비가 100px 이었다면 내가 left : 50% 값을 주면 left로 50px만큼 이동했다는 것  !\n[해당내용 repl it : CSS 17에 나옴] </code></pre></div>\n</li>\n</ol>\n<h2 id=\"2-html-layout\"><a href=\"#2-html-layout\" aria-label=\"2 html layout permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. HTML Layout</h2>\n<p><strong>HTML 웹페이지는 주로 이러한 layout을 가지고 있다.</strong>\n<img src=\"https://www.w3schools.com/html/img_sem_elements.gif\" alt=\"html layout\">\n각 태그는 semantic tag들로서 각 태그 이름자체가 의미를 가지고 있는 tag들이다.</p>\n<ol>\n<li>section\n<strong>주로 제목을 포함한 내용의 그룹들을 section이라는 태그를 사용하여 제어한다.</strong>\n홈페이지는 보통 컨텐트, 내용정보, 소개 등의 섹션들로 나누어진다.</li>\n<li>article\n<strong>독립적이고 혼자만의 정보를 가지고 있는 요소들을 특정할 때, article을 쓴다.</strong></li>\n<li>nav\n<strong>navigation bar 나 , link들을 정의할 때 사용</strong></li>\n<li>aside\n<strong>적혀있는 내용 이외에 내용을 넣는 컨텐트를 표현할 때 사용</strong></li>\n<li>레이아웃은 한번에 잘짜기보다는 경험을 통해서 늘리고, 좋은 레이아웃을 가진 사이트에서 개발자도구를 보면서 어떻게 레이아웃을 잡았는지 알아가는 것이 중요 !</li>\n</ol>\n<h2 id=\"3-layout-잡을-때-주로-쓰이는-property\"><a href=\"#3-layout-%EC%9E%A1%EC%9D%84-%EB%95%8C-%EC%A3%BC%EB%A1%9C-%EC%93%B0%EC%9D%B4%EB%8A%94-property\" aria-label=\"3 layout 잡을 때 주로 쓰이는 property permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Layout 잡을 때 주로 쓰이는 Property</h2>\n<ol>\n<li>float\n이미지 주위를 텍스트로 감싸기 위해 만들어짐, 이미지를 떠있는 것처럼 만들고 그 주변으로 글씨가 나타나게끔 해준다.잡지를 보면서 사진이 한쪽에 있고 그 주변으로 글이 있는 거를 볼 수 있는데 그런 효과를 준다고 보면된다.</li>\n<li>float: left 하면 왼쪽으로 element가 뜨고, 그 주변으로 다른 요소들이 잡지의 사진 + 글형식으로 붙는다.</li>\n<li>float: right 하면 오른쪽으로 element가 뜨고, 그 주변으로 다른 요소들이 잡지의 사진 + 글형식으로 붙는다.</li>\n<li>float속성을 주면 뜨는 값이여서 부모element가 자식element의 높이를 인지 못해서 부모element보다 해당 element가 더 커지는 경우가 있다. 그럴 때 문제를 해결하기 위해서 overflow: hidden 속성이나, clear 를 사용해서 문제를 해결한다.</li>\n<li>clear\nfloat의 동작방식을 제어하는데 사용 </li>\n<li>\n<p>clear 속성은 쓰여지는 요소에 해당 element float 의 영향을 안받겠다고\t말하는 것. float속성을 위에있는 element 가 쓰면 자연스럽게 다음 tag들이 그 element 주변을 둘러싸게 되는데 나는 그런 속성을 받지않을 거면 clear : both를 주면된다.(float property가 상속되는 것은 아님)</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">Ex. \n.after-box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">clear</span> <span class=\"token punctuation\">:</span> left<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><em>after-box 라는 클래스이름을 가진 element는 float:left라\t는 영향을 받지않을 것이다! 라고 말하는 것\n그러면 float : left를 준 element 옆쪽으로 글이 붙는 게 \t아니라, 아예 새로운 줄에서 element 시작할 수 있음</em></p>\n</li>\n<li>clear : both 오른쪽왼쪽 float 둘다 영향 안받음</li>\n<li>원래 float 효과를 준 다음 element로 오면, float속\t성이 붙어서 왼쪽 혹은 오른쪽 정렬이 되고,다음 요소도 \t\tfloat 효과 영향 주기 위해서 자기 너비를 최소화하고, 다\t\t음 요소가 올 수 있게 끔 해주는데 float 속성이 없는 \t\t객체는 나머지 공간을 모두 차지한다! </li>\n</ol>","fields":{"slug":"/posts/til-csslayout/","tagSlugs":["/tag/til/","/tag/css/"]},"frontmatter":{"date":"2019-08-12T20:30:37.121Z","description":"CSS Layout","tags":["TIL","CSS"],"title":"TIL - CSS Layout"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til-csslayout/"}}}