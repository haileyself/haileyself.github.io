{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til-js-scope/","result":{"data":{"markdownRemark":{"id":"740756e3-2072-5b84-bea1-31f563872d14","html":"<h2 id=\"javascript의-scope\"><a href=\"#javascript%EC%9D%98-scope\" aria-label=\"javascript의 scope permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript의 SCOPE</h2>\n<ul>\n<li>Scope는 변수가 선언되고 사용할 수 있는 공간을 말함</li>\n<li>Scope 외부에서는 특정 Scope의 변수에 접근할 수 없음</li>\n</ul>\n<h3 id=\"1-scope의-종류\"><a href=\"#1-scope%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"1 scope의 종류 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Scope의 종류</h3>\n<h4 id=\"1-local-scope\"><a href=\"#1-local-scope\" aria-label=\"1 local scope permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Local scope</h4>\n<ul>\n<li>함수 안에서 { } 으로 감싸진 block 안의 범위를 의미</li>\n<li>Local scope를 가지는 변수는 local variables이라 함</li>\n<li>주로 block 이라함은 함수 내부를 의미함</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> Ex<span class=\"token punctuation\">.</span> <span class=\"token keyword\">function</span> <span class=\"token function\">hi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> ‘i am block’<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>hi 뒷 부분 { } 이부분이 block이다.</li>\n<li>블락 내부에서 변수가 정의되면 변수는 오로지 {} (block) 내부에서만 사용할 수 있음</li>\n<li>블락내부에서 선언 된 변수를 {} 블락 밖에서 console.log() 하면, 나오지 않는데, block 이 끝나면 해당변수의 scope도 종료된다.\n그래서 for문 여러 개 돌릴 때, let i = 0 이렇게 변수 값을 let i 를 주면 for문이 끝났을 때 해당 변수가 살아있지 않게되기 때문에, let 쓰면 똑같은 변수명으로 for문 여러 개 만들기가 가능함</li>\n<li>Global scope</li>\n<li>block 내 뿐만 아니라 전체적으로 사용가능한 범위를 의미</li>\n<li>global scope를 가진 변수를 global variable라고 함</li>\n<li>var 가 대표적인 전역변수</li>\n<li>scope 오염의 위험도가 높아 안쓰는 게 좋음 !</li>\n<li>Global variables를 쓰면 여기저기서 접근하기 쉬워서 좋다고 생각할 수 도 있지만, 너무 남용하면 프로그램에 문제를 일으킬 수 있음. scope가 프로그램이 종료될 때까지 살아있음</li>\n</ul>\n<h3 id=\"2-scope오염\"><a href=\"#2-scope%EC%98%A4%EC%97%BC\" aria-label=\"2 scope오염 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Scope오염</h3>\n<ul>\n<li>전역 변수의 scope가 계속 유효하기 떄문에, 변수로 설정한 값이 다른 값으로 대체되거나 하는 것을 Scope오염이라 한다.</li>\n</ul>\n<h4 id=\"scope-오염의-대표적-사례\"><a href=\"#scope-%EC%98%A4%EC%97%BC%EC%9D%98-%EB%8C%80%ED%91%9C%EC%A0%81-%EC%82%AC%EB%A1%80\" aria-label=\"scope 오염의 대표적 사례 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scope 오염의 대표적 사례</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> satellite <span class=\"token operator\">=</span> <span class=\"token string\">\"The Moon\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> galaxy <span class=\"token operator\">=</span> <span class=\"token string\">\"The Milky Way\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> stars <span class=\"token operator\">=</span> <span class=\"token string\">\"North Star\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">callMyNightSky</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  stars <span class=\"token operator\">=</span> <span class=\"token string\">\"Sirius\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"Night Sky: \"</span> <span class=\"token operator\">+</span> satellite <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> stars <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> galaxy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">callMyNightSky</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//출력: Night Sky: The Moon, Sirius, THe Milky Way</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>stars<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//출력: Sirius;</span></code></pre></div>\n<p>함수 안에서만 값이 Sirius 로 바뀐 것이 아니라 함수밖에 console을 찍었는데 함수 안에서 선언한 ‘Sirius’가 적용 되어있음. 만약 callMyNightSky 함수에서 , stars 변수를 해당 함수에서만 쓰고 싶었다면 let stars = ‘Sirius’ 이렇게 정의해줬어야한다 !</p>\n<h3 id=\"3-좋은-scoping-습관\"><a href=\"#3-%EC%A2%8B%EC%9D%80-scoping-%EC%8A%B5%EA%B4%80\" aria-label=\"3 좋은 scoping 습관 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 좋은 Scoping 습관</h3>\n<h4 id=\"1-변수들은-block-scope로-최대한-나눠준다\"><a href=\"#1-%EB%B3%80%EC%88%98%EB%93%A4%EC%9D%80-block-scope%EB%A1%9C-%EC%B5%9C%EB%8C%80%ED%95%9C-%EB%82%98%EB%88%A0%EC%A4%80%EB%8B%A4\" aria-label=\"1 변수들은 block scope로 최대한 나눠준다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 변수들은 block scope로 최대한 나눠준다</h4>\n<p>최대한 {} 블락 내에서 const 랑 let 많이 쓰기!</p>\n<h4 id=\"2-global-변수-남용하지-말기\"><a href=\"#2-global-%EB%B3%80%EC%88%98-%EB%82%A8%EC%9A%A9%ED%95%98%EC%A7%80-%EB%A7%90%EA%B8%B0\" aria-label=\"2 global 변수 남용하지 말기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Global 변수 남용하지 말기</h4>","fields":{"slug":"/posts/til-js-scope/","tagSlugs":["/tag/til/","/tag/javascript/","/tag/scope/"]},"frontmatter":{"date":"2019-08-17T15:30:37.121Z","description":"JavaScript Scope","tags":["TIL","JAVASCRIPT","scope"],"title":"JavaScript Scope"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til-js-scope/"}}}