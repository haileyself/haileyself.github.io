{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til-js-object/","result":{"data":{"markdownRemark":{"id":"92ad808b-ed3c-50a2-90cd-e134a9690363","html":"<p>Javascript 객체에 대해 배운 내용을 정리해보겠습니다.</p>\n<h2 id=\"객체-object\"><a href=\"#%EA%B0%9D%EC%B2%B4-object\" aria-label=\"객체 object permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 (Object)</h2>\n<p>객체는 배열과 비슷하지만 다르다! 배열은 데이터를 넣으면 0,1,2 라는 index 를 순서대로 자동으로 갖게되지만 객체는 해당 값에 대한 index(property)를 생성자가 원하는 대로 first, second 와 같은 문자열로 지정할 수 있다.</p>\n<p><strong>객체도 배열과 같이 데이터를 담아서 정리할 수 있는 상자라고 생각하면 조금 이해가 쉬울 것이다!</strong></p>\n<ul>\n<li>객체는 { } 중괄호에 담으며, 속성(key) : 값(value) 이런식으로 나누어서 데이터를 저장한다 !</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">,</span>\n  key1<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">,</span>\n  key2<span class=\"token punctuation\">:</span> value\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>속성값은 주로 key라고 부르며, property라고도 부른다. 저장되는 데이터 자체는 value라고 부른다.</p>\n<h3 id=\"1-객체-생성방법\"><a href=\"#1-%EA%B0%9D%EC%B2%B4-%EC%83%9D%EC%84%B1%EB%B0%A9%EB%B2%95\" aria-label=\"1 객체 생성방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 객체 생성방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> property1<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">,</span> property2<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">,</span> property3<span class=\"token punctuation\">:</span> value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 객체 {} 안에 직접 property와 value를 지정해서 넣어주는 방법</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">\"property1\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">\"property2\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">[</span><span class=\"token string\">\"property3\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 빈객체를 만들어주고, [](Bracket Notation)을 사용해서 property 이름을 설정하고, 값을 넣어주는 방법</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>property1 <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>property2 <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\nobj<span class=\"token punctuation\">.</span>property3 <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 빈 객체를 만들고, 객체에 .(dot notation)을 사용해서 property와 value를 정해줌 (이때, property는 숫자로 시작할 수 없다)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// new 키워드를 사용해서 하나의 객체를 정의하고 생성!</span></code></pre></div>\n<ul>\n<li>객체의 property 이름은 중복되서는 안된다</li>\n<li>속성과 value 값은 ’:’ 으로 구분한다.</li>\n<li>객체에 요소를 추가할 때는 ’,’ 을 붙여준다.</li>\n<li>property 값은 어느 타입이나 다 가능하다.</li>\n<li>자바스크립트 Object는 다양한 타입의 data를 value값으로 가진다. (Boolean/ Numbers/ String/ Dates/ Math/ Regular Expressions/ Array/ Function / Objects)</li>\n</ul>\n<h3 id=\"2-value-값-추출-방법객체-내에-속성-접근법\"><a href=\"#2-value-%EA%B0%92-%EC%B6%94%EC%B6%9C-%EB%B0%A9%EB%B2%95%EA%B0%9D%EC%B2%B4-%EB%82%B4%EC%97%90-%EC%86%8D%EC%84%B1-%EC%A0%91%EA%B7%BC%EB%B2%95\" aria-label=\"2 value 값 추출 방법객체 내에 속성 접근법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. value 값 추출 방법(객체 내에 속성 접근법)</h3>\n<h4 id=\"1-bracket-notation-objproperty1\"><a href=\"#1-bracket-notation-objproperty1\" aria-label=\"1 bracket notation objproperty1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Bracket Notation: obj[‘property1’]</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">grade<span class=\"token punctuation\">[</span><span class=\"token string\">\"k8805\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 출력: grade의 k8805의 value값</span>\n\ngrade<span class=\"token punctuation\">[</span><span class=\"token string\">\"k88\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"05\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//이렇게 해도 위와 같은 값 나옴 !</span></code></pre></div>\n<p>property 이름을 특정 변수명(name)으로 설정한 경우, obj[변수명(name)] 으로 value 값을 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> plan <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Basic\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> propertyName <span class=\"token operator\">=</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>plan<span class=\"token punctuation\">[</span>propertyName<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//출력: \"Basic\";</span>\n<span class=\"token comment\">// name 이라는 property 명을 직접 안써주고 변수명인 propertyName 을 활용해서 객체 불러오기 가능!</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  cat<span class=\"token punctuation\">:</span> <span class=\"token string\">\"meow\"</span><span class=\"token punctuation\">,</span>\n  dog<span class=\"token punctuation\">:</span> <span class=\"token string\">\"woof\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> sound <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span><span class=\"token string\">\"cat\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//출력: meow</span></code></pre></div>\n<ul>\n<li>객체이름 이후에 [] bracket안에 property 이름을 넣으면 value값에 접근가능하다.</li>\n<li>대괄호 안에는 변수, 공백, 숫자로 시작하는 string도 넣을 수 있다.</li>\n<li>obj[“1props”], obj[“property name”] 도 가능!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  wecode<span class=\"token punctuation\">:</span> <span class=\"token string\">\"good\"</span><span class=\"token punctuation\">,</span>\n  coding<span class=\"token punctuation\">:</span> <span class=\"token string\">\"fun\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> coding <span class=\"token operator\">=</span> <span class=\"token string\">\"wecode\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> best <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>coding<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>best<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 출력: good</span></code></pre></div>\n<p>bracket notation을 사용하면, 변수 coding이라는 이름으로 설정한 property를 찾아감. 만약, coding이라는 string으로 설정된 property를 찾기위해서는 obj[‘coding’]을 조회했어야 함.</p>\n<h4 id=\"2-dot-notation--objproperty1\"><a href=\"#2-dot-notation--objproperty1\" aria-label=\"2 dot notation  objproperty1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Dot Notation : obj.property1</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> summer<span class=\"token punctuation\">,</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//출력: 20;</span>\n\n<span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  cat<span class=\"token punctuation\">:</span> <span class=\"token string\">\"meow\"</span><span class=\"token punctuation\">,</span>\n  dog<span class=\"token punctuation\">:</span> <span class=\"token string\">\"woof\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> sound <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 출력 : meow</span></code></pre></div>\n<ul>\n<li>객체이름 다음에 dot(.) 표시와 함께 정확한 property이름을 쓰면, value에 접근가능하다.</li>\n<li>Dot notation을 사용할 때는, property 이름이 영숫자만 가능하며, 숫자로\n시작할 수는 없다. ( obj. 1 이렇게 찾으면 데이터 못가져옴)</li>\n<li>변수 값으로 value값에 접근할 수 없다.(obj.변수이름 -> 접근 불가)</li>\n<li>obj.prop_1, obj.prop$는 가능 !</li>\n<li>Dot Notation은 정확한 property 이름을 가지고 object 의 value값을 찾는 것이다. 정확한 property값이기때문에 , 변수나 다른 값은 들어올 수 없고 bracket notation보다는 쓰기 쉽긴 하다 !</li>\n</ul>\n<h3 id=\"3-객체-정의-후-value값-수정하기\"><a href=\"#3-%EA%B0%9D%EC%B2%B4-%EC%A0%95%EC%9D%98-%ED%9B%84-value%EA%B0%92-%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"3 객체 정의 후 value값 수정하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 객체 정의 후 Value값 수정하기</h3>\n<ul>\n<li>객체를 정의한 후 객체에 담긴 value 값을 수정할 수 있다.</li>\n<li>객체 속성을 활용하여, value값에 접근하고 다시 정의해주면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> myObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"summer\"</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  gender<span class=\"token punctuation\">:</span> <span class=\"token string\">\"female\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmyObj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"hailey\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//출력:  { name: \"hailey\", age: 20, gender: \"female\" };</span></code></pre></div>\n<p>참고자료: Dot Notation vs. Bracket Notation[codeburst]</p>","fields":{"slug":"/posts/til-js-object/","tagSlugs":["/tag/til/","/tag/javascript/","/tag/object/"]},"frontmatter":{"date":"2019-08-16T15:30:37.121Z","description":"JavaScript 객체(Object)","tags":["TIL","JAVASCRIPT","object"],"title":"JavaScript 객체(Object)"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til-js-object/"}}}